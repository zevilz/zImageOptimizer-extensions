# Extension: wp_change_ext
# Hook: convert2jpg-before-success

# Save original PATH
ORIGINAL_PATH=$PATH

# Get main script paths
PATH=$(echo "$BINARY_PATHS" | tr ' ' ':')

# Get images URI for replace
IMAGE_OLD_URI=$(echo "$IMAGE_OLD" | sed "s|${WP_ROOT}||")
IMAGE_NEW_URI=$(echo "$IMAGE_NEW" | sed "s|${WP_ROOT}||")

# Replace attachment data
if [ "$FORCE_RETRY" -eq 1 ]; then
	ATTEMPTS=0
	WP_UPDATE_ATTACHMENT_RESULT=666
	until [[ "$WP_UPDATE_ATTACHMENT_RESULT" -eq 0 || "$WP_UPDATE_ATTACHMENT_RESULT" -eq 2 ]]; do
		if [ $CUR_USER == "root" ]; then
			WP_UPDATE_ATTACHMENT=$(su -l $WP_OWNER -s /bin/bash -c "$WPCLI zio replace \"${IMAGE_OLD}\" \"${IMAGE_NEW}\" --tmp-path=${TMP_PATH} --force-retry --path=${WP_ROOT} --quiet 2>/dev/null")
		else
			WP_UPDATE_ATTACHMENT=$($WPCLI zio replace "${IMAGE_OLD}" "${IMAGE_NEW}" --tmp-path=${TMP_PATH} --force-retry --path=${WP_ROOT} --quiet 2>/dev/null)
		fi

		WP_UPDATE_ATTACHMENT_RESULT=$?
		ATTEMPTS=$(echo "$ATTEMPTS+1" | bc)

		if [ $ATTEMPTS -eq 2 ]; then
			echo -n "[WAITING FOR UPDATE]"
		fi
	done
else
	if [ $CUR_USER == "root" ]; then
		WP_UPDATE_ATTACHMENT=$(su -l $WP_OWNER -s /bin/bash -c "$WPCLI zio replace \"${IMAGE_OLD}\" \"${IMAGE_NEW}\" --tmp-path=${TMP_PATH} --path=${WP_ROOT} --quiet 2>/dev/null")
	else
		WP_UPDATE_ATTACHMENT=$($WPCLI zio replace "${IMAGE_OLD}" "${IMAGE_NEW}" --tmp-path=${TMP_PATH} --path=${WP_ROOT} --quiet 2>/dev/null)
	fi

	WP_UPDATE_ATTACHMENT_RESULT=$?
fi

if [[ "$WP_UPDATE_ATTACHMENT_RESULT" -eq 0 || "$WP_UPDATE_ATTACHMENT_RESULT" -eq 2 ]]; then

	# Replace URLs
	if [ "$FORCE_RETRY" -eq 1 ]; then
		ATTEMPTS=0
		WP_REPLACE_RESULT=666
		until [[ "$WP_REPLACE_RESULT" -eq 0 ]]; do
			if [ $CUR_USER == "root" ]; then
				WP_REPLACE=$(su -l $WP_OWNER -s /bin/bash -c "$WPCLI search-replace \"${IMAGE_OLD_URI}\" \"${IMAGE_NEW_URI}\" --force-retry --path=${WP_ROOT} --report-changed-only --all-tables 2>/dev/null")
			else
				WP_REPLACE=$($WPCLI search-replace "${IMAGE_OLD_URI}" "${IMAGE_NEW_URI}" --force-retry --path=${WP_ROOT} --report-changed-only --all-tables 2>/dev/null)
			fi

			WP_REPLACE_RESULT=$?
			ATTEMPTS=$(echo "$ATTEMPTS+1" | bc)

			if [ $ATTEMPTS -eq 2 ]; then
				echo -n "[WAITING FOR REPLACE]"
			fi
		done
	else
		if [ $CUR_USER == "root" ]; then
			WP_REPLACE=$(su -l $WP_OWNER -s /bin/bash -c "$WPCLI search-replace \"${IMAGE_OLD_URI}\" \"${IMAGE_NEW_URI}\" --path=${WP_ROOT} --report-changed-only --all-tables 2>/dev/null")
		else
			WP_REPLACE=$($WPCLI search-replace "${IMAGE_OLD_URI}" "${IMAGE_NEW_URI}" --path=${WP_ROOT} --report-changed-only --all-tables 2>/dev/null)
		fi

		WP_REPLACE_RESULT=$?
	fi

	if [ "$WP_REPLACE_RESULT" -eq 0 ]; then

		if [ "$WP_UPDATE_ATTACHMENT_RESULT" -eq 0 ]; then
			WP_ATTACHMENTS_UPDATED=$(echo "$WP_ATTACHMENTS_UPDATED+1" | bc)
			$SETCOLOR_SUCCESS
			echo -n "[WP ATTACHMENT UPDATED]"
			$SETCOLOR_NORMAL
		fi

		IMAGE_REPLACEMENTS=$(echo "$WP_REPLACE" | grep "Success:" | sed 's/.*Made \([0-9]\+\) replacements.*/\1/')
		if [[ "$IMAGE_REPLACEMENTS" =~ ^[0-9]+$ ]]; then
			WP_IMAGES_REPLACEMENTS=$(echo "$WP_IMAGES_REPLACEMENTS+$IMAGE_REPLACEMENTS" | bc)
			if [ $IMAGE_REPLACEMENTS -eq 0 ]; then
				echo -n "[NO WP REPLACEMENTS]"
			else
				WP_IMAGES_REPLACED=$(echo "$WP_IMAGES_REPLACED+1" | bc)
				$SETCOLOR_SUCCESS
				echo -n "[WP REPLACEMENTS: ${IMAGE_REPLACEMENTS}]"
				$SETCOLOR_NORMAL
			fi
		else
			$SETCOLOR_FAILURE
			echo -n "[UNKNOWN WP REPLACEMENTS COUNT]"
			$SETCOLOR_NORMAL
		fi
	else
		# Restore old attachment data
		if [ "$WP_UPDATE_ATTACHMENT_RESULT" -eq 0 ]; then
			if [ $CUR_USER == "root" ]; then
				WP_UPDATE_ATTACHMENT=$(su -l $WP_OWNER -s /bin/bash -c "$WPCLI zio replace \"${IMAGE_NEW}\" \"${IMAGE_OLD}\" --tmp-path=${TMP_PATH} --path=${WP_ROOT} --quiet 2>/dev/null")
			else
				WP_UPDATE_ATTACHMENT=$($WPCLI zio replace "${IMAGE_NEW}" "${IMAGE_OLD}" --tmp-path=${TMP_PATH} --path=${WP_ROOT} --quiet 2>/dev/null)
			fi
			REVERT_CONVERTING=1
		elif [ "$WP_UPDATE_ATTACHMENT_RESULT" -eq 2 ]; then
			echo "${IMAGE_OLD_URI}:${IMAGE_NEW_URI}" >> "${TMP_PATH}/zio_wp_failed_replacements"
		fi

		WP_IMAGES_REPLACE_FAILS=$(echo "$WP_IMAGES_REPLACE_FAILS+1" | bc)

		$SETCOLOR_FAILURE
		echo -n "[WP REPLACE FAILED]"
		$SETCOLOR_NORMAL
	fi

else
	WP_ATTACHMENTS_UPDATE_FAILS=$(echo "$WP_ATTACHMENTS_UPDATE_FAILS+1" | bc)

	$SETCOLOR_FAILURE
	echo -n "[WP ATTACHMENT UPDATE FAILED]"
	$SETCOLOR_NORMAL
	REVERT_CONVERTING=1
fi

# Restore original PATH
PATH=$ORIGINAL_PATH
